{"version":3,"sources":["services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/HeaderComponent.js","components/FooterComponent.jsx","components/CreateEmployeeComponent.jsx","services/LoginService.js","components/LoginComponent.jsx","services/ImcService.js","components/ListImcComponent.jsx","components/ViewEmployeeComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","props","state","employees","addEmployee","bind","login","imc","cerrarSesion","editEmployee","deleteEmployee","id","EmployeeService","then","res","setState","filter","this","history","push","getEmployees","console","log","data","content","localStorage","setItem","alert","className","onClick","map","key","idestado","estado","style","marginLeft","viewEmployee","Component","HeaderComponent","class","href","type","data-toggle","data-target","aria-controls","FooterComponent","CreateEmployeeComponent","saveOrUpdateEmployee","e","preventDefault","firstName","lastName","emailId","JSON","stringify","createEmployee","updateEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","match","params","getEmployeeById","getTitle","placeholder","name","onChange","cancel","loginData","LoginComponent","username","password","LoginService","signin","sessionStorage","accessToken","changepasswordHandler","IMC_API_BASE_URL","mytoken","getItem","headers","ListImcComponent","ImcService","getImcs","iduser","ViewEmployeeComponent","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.198633f7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//<<<<<<< HEAD\r\n//const EMPLOYEE_API_BASE_URL = \"http://35.223.20.167:8145/api/auth/estados\";\r\n//=======\r\n//const EMPLOYEE_API_BASE_URL = \"http://35.223.20.167:8085/api/auth/estados\";\r\nconst EMPLOYEE_API_BASE_URL = \"http://34.122.12.31:8145/api/auth/estados\";\r\n//>>>>>>> dcbbd65485472ffb46ee02dd2a494467c9a597e0\r\n\r\nclass EmployeeService {\r\n\r\n    getEmployees(){\r\n        return axios.get(EMPLOYEE_API_BASE_URL);\r\n    }\r\n\r\n    createEmployee(employee){\r\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\r\n    }\r\n\r\n    getEmployeeById(employeeId){\r\n        return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\r\n    }\r\n\r\n    updateEmployee(employee, employeeId){\r\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\r\n    }\r\n}\r\n\r\nexport default new EmployeeService()\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                employees: []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.imc = this.imc.bind(this);\r\n\r\n        this.cerrarSesion = this.cerrarSesion.bind(this);\r\n\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n    }\r\n\r\n    deleteEmployee(id){\r\n        EmployeeService.deleteEmployee(id).then( res => {\r\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\r\n        });\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        //localStorage.setItem('token', null);\r\n\r\n        EmployeeService.getEmployees().then((res) => {\r\n             console.log(res);\r\n            this.setState({ employees: res.data.content});\r\n        });\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n\r\n    imc(){\r\n        this.props.history.push('/add-imc/_add');\r\n    }\r\n\r\n    login(){\r\n        this.props.history.push('/login/_add');\r\n    }\r\n\r\n    cerrarSesion(){\r\n        localStorage.setItem('token', null);\r\n        alert('Sesion cerrada');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>  \r\n                <h1> </h1> \r\n                 <h2 className=\"text-center\">Administrador</h2>\r\n                 \r\n                 <div className = \"text-center\" >\r\n                    <button className=\"btn btn-success\" onClick={this.addEmployee} > Agregar Usuario</button>\r\n                    <button className=\"btn btn-info\" onClick={this.imc}> Imc </button>\r\n                    <button className=\"btn btn-info\" onClick={this.login}> Login </button>\r\n                    <button className=\"btn btn-danger\" onClick={this.cerrarSesion}> Cerrar Sesion </button>\r\n                 </div>\r\n                \r\n\r\n\r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> ID </th>\r\n                                    <th> Nombre </th>\r\n                                    <th> E-mail </th>\r\n                                    <th> Dirección </th>\r\n                                    <th> Telefono </th>\r\n                                    <th> Acción </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        employee => \r\n                                        <tr key = {employee.id}>\r\n                                             <td> { employee.id} </td>   \r\n                                             <td> {employee.idestado}</td>\r\n                                             <td> {employee.estado}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav class=\"navbar navbar-expand-lg\">\r\n                        <div class=\"container\">\r\n                            <a class=\"navbar-brand text-white\" href=\"#\"><i class=\"fa fa-graduation-cap fa-lg mr-2\"></i>ADMINISTRADOR DE PERFILES</a>\r\n                            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#nvbCollapse\" aria-controls=\"nvbCollapse\">\r\n                                <span class=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <div class=\"collapse navbar-collapse\" id=\"nvbCollapse\">\r\n                                <ul class=\"navbar-nav ml-auto\">\r\n                                    <li class=\"nav-item pl-1\">\r\n                                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-home fa-fw mr-1\"></i>Opcion 1</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item active pl-1\">\r\n                                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-th-list fa-fw mr-1\"></i>Opcion 2</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item pl-1\">\r\n                                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-info-circle fa-fw mr-1\"></i>Opcion 3</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item pl-1\">\r\n                                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-phone fa-fw fa-rotate-180 mr-1\"></i>Opcion 4</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item pl-1\">\r\n                                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-user-plus fa-fw mr-1\"></i>NombreUsuario</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item pl-1\">\r\n                                        <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-sign-in fa-fw mr-1\"></i>Opcion 6</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className = \"footer\">\r\n                    <span className=\"footerText\">Version de clase Manuel-Chema</span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass CreateEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            emailId: ''\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\r\n                let employee = res.data;\r\n                this.setState({firstName: employee.firstName,\r\n                    lastName: employee.lastName,\r\n                    emailId : employee.emailId\r\n                });\r\n            });\r\n        }        \r\n    }\r\n    saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId};\r\n        console.log('employee => ' + JSON.stringify(employee));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            EmployeeService.createEmployee(employee).then(res =>{\r\n                this.props.history.push('/employees');\r\n            });\r\n        }else{\r\n            EmployeeService.updateEmployee(employee, this.state.id).then( res => {\r\n                this.props.history.push('/employees');\r\n            });\r\n        }\r\n    }\r\n    \r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/employees');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Add Employee</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Employee</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        <div className = \"form-group\">\r\n                                            <label> First Name: </label>\r\n                                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" \r\n                                                value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Last Name: </label>\r\n                                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" \r\n                                                value={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label> Email Id: </label>\r\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateEmployeeComponent\r\n","import axios from 'axios';\r\n\r\n//const LOGIN_API_BASE_URL = \"http://localhost:8080/api/auth/signin\";\r\nconst LOGIN_API_BASE_URL = \"http://34.122.12.31:8145/api/auth/signin\";\r\n\r\nclass LoginService {\r\n    signin(loginData){\r\n        return axios.post(LOGIN_API_BASE_URL,\r\n            loginData);\r\n    }\r\n}\r\n\r\nexport default new LoginService()","import React, { Component } from 'react'\r\nimport LoginService from '../services/LoginService';\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            id: this.props.match.params.id,\r\n            password: '',\r\n            emailId: ''\r\n        }\r\n        this.changepasswordHandler = this.changepasswordHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount(){\r\n\r\n        // step 4\r\n        /*\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            LoginService.getEmployeeById(this.state.id).then( (res) =>{\r\n                let employee = res.data;\r\n                this.setState({password: employee.password,\r\n                    lastName: employee.lastName,\r\n                    emailId : employee.emailId\r\n                });\r\n            });\r\n        } */       \r\n    }\r\n    saveOrUpdateEmployee = (e) => {\r\n        e.preventDefault();\r\n        let loginData = {username: this.state.emailId, password: this.state.password};\r\n        console.log('login data => ' + JSON.stringify(loginData));\r\n\r\n        // step 5\r\n        if(this.state.id === '_add'){\r\n            LoginService.signin(loginData).then(res =>{\r\n                console.log(res.data);\r\n                sessionStorage.setItem('token', res.data.accessToken);\r\n\r\n                //console.log(res.data.accessToken);\r\n                \r\n                //this.props.history.push('/employees');\r\n            });\r\n        }else{\r\n           /* EmployeeService.updateEmployee(loginData, this.state.id).then( res => {\r\n                this.props.history.push('/employees');\r\n            }); */\r\n        }\r\n    }\r\n    \r\n    changepasswordHandler= (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n/*\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n*/\r\n    changeEmailHandler= (event) => {\r\n        this.setState({emailId: event.target.value});\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/employees');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id === '_add'){\r\n            return <h3 className=\"text-center\">Login </h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Login Employee</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                   <div className = \"container\">\r\n                        <div className = \"row\">\r\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                                {\r\n                                    this.getTitle()\r\n                                }\r\n                                <div className = \"card-body\">\r\n                                    <form>\r\n                                        \r\n                                        <div className = \"form-group\">\r\n                                            <label> Email: </label>\r\n                                            <input placeholder=\"email\" name=\"email\" className=\"form-control\" \r\n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label> Password : </label>\r\n                                            <input placeholder=\"Password \" name=\"password\" className=\"form-control\" \r\n                                                value={this.state.password} onChange={this.changepasswordHandler}/>\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}> Login </button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent\r\n","import axios from 'axios';\r\n\r\n//const EMPLOYEE_API_BASE_URL = \"http://35.223.20.167:8085/api/auth/estados\";\r\n//const IMC_API_BASE_URL = \"http://localhost:8080/imcs\";\r\nconst IMC_API_BASE_URL = \"http://34.122.12.31:8145/imcs\";\r\n\r\nclass ImcService {\r\n\r\n    getImcs(){\r\n        var mytoken = sessionStorage.getItem('token') || '';\r\n\r\n        return axios.get(IMC_API_BASE_URL, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${mytoken}`\r\n            },\r\n        });\r\n    }\r\n\r\n    createEmployee(employee){\r\n        return axios.post(IMC_API_BASE_URL, employee);\r\n    }\r\n\r\n    getEmployeeById(employeeId){\r\n        return axios.get(IMC_API_BASE_URL + '/' + employeeId);\r\n    }\r\n\r\n    updateEmployee(employee, employeeId){\r\n        return axios.put(IMC_API_BASE_URL + '/' + employeeId, employee);\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        return axios.delete(IMC_API_BASE_URL + '/' + employeeId);\r\n    }\r\n}\r\n\r\nexport default new ImcService()","import React, { Component } from 'react'\r\nimport ImcService from '../services/ImcService'\r\n\r\nclass ListImcComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                employees: []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.cerrarSesion = this.cerrarSesion.bind(this);\r\n\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n    }\r\n\r\n    deleteEmployee(id){\r\n        ImcService.deleteEmployee(id).then( res => {\r\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\r\n        });\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`);\r\n    }\r\n\r\n    componentDidMount(){\r\n        //localStorage.setItem('token', null);\r\n\r\n        ImcService.getImcs().then((res) => {\r\n            console.log('imcs ');\r\n            console.log(res);\r\n            this.setState({ employees: res.data.content});\r\n        });\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n\r\n    login(){\r\n        this.props.history.push('/login/_add');\r\n    }\r\n\r\n    cerrarSesion(){\r\n        localStorage.setItem('token', null);\r\n        alert('Sesion cerrada');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h2 className=\"text-center\">IMC demo (token)</h2>\r\n                 \r\n                 \r\n                 <br></br>\r\n                 <div className = \"row\">\r\n                        <table className = \"table table-striped table-bordered\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> ID </th>\r\n                                    <th> id usuario</th>\r\n                                    <th> imc </th>\r\n                                    <th> Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        employee => \r\n                                        <tr key = {employee.id}>\r\n                                             <td> { employee.id} </td>   \r\n                                             <td> {employee.iduser}</td>\r\n                                             <td> {employee.imc}</td>\r\n                                             <td>\r\n                                                 <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button>\r\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\r\n                                             </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                 </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListImcComponent\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nclass ViewEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\r\n            this.setState({employee: res.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View Employee Details</h3>\r\n                    <div className = \"card-body\">\r\n                        <div className = \"row\">\r\n                            <label> Employee First Name: </label>\r\n                            <div> { this.state.employee.firstName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Last Name: </label>\r\n                            <div> { this.state.employee.lastName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> Employee Email ID: </label>\r\n                            <div> { this.state.employee.emailId }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployeeComponent\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport FooterComponent from './components/FooterComponent';\r\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\r\nimport LoginComponent from './components/LoginComponent';\r\nimport ListImcComponent from './components/ListImcComponent';\r\n\r\n//import UpdateEmployeeComponent from './components/UpdateEmployeeComponent';\r\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Router>\r\n              <HeaderComponent />\r\n                <div className=\"container\">\r\n                    <Switch> \r\n                          <Route path = \"/\" exact component = {ListEmployeeComponent}></Route>\r\n                          <Route path = \"/employees\" component = {ListEmployeeComponent}></Route>\r\n                          <Route path = \"/add-imc/:id\" component = {ListImcComponent}></Route>\r\n                          <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponent}></Route>\r\n                          <Route path = \"/login/:id\" component = {LoginComponent}></Route>\r\n                          <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponent}></Route>\r\n                          {/* <Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponent}></Route> */}\r\n                    </Switch>\r\n                </div>\r\n              <FooterComponent />\r\n        </Router>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}